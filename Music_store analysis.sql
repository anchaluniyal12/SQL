#MUSIC STORE DATA ANALYSIS
create database music_editor;
use music_editor;
select* from album2;
#question set 1 easy
# who is the senior most employee based on job title?
select * from employee;
select * from employee
order by levels desc
limit 1;

# que) which country have the most invoices?
select * from invoice;

select count(*) as c,billing_country
from invoice
group by billing_country
order by c desc
limit 1;

#3 what are top 3 values of total invoice
select * from invoice;
select * from invoice
order by total  desc
limit 3;

#4) which city has the best customers? we would like to throw a promotional music festival in the city we made the most money. write a query
#that reurn one city that ha the highest sum of invoice totals.return both the city name and sum of all invoice total

select sum(total) as invoice_total,billing_city
from invoice
group by billing_city
order by invoice_total desc;

select sum(total) from invoice;
use music_editor;

#5) WHO IS THE BEST CUSTOMER? THE CUSTOMER WHO HAS SPENT THE MOST MONRY WILL BE DECLARED AS THE BEST CUSTOMER.WRITE A QUERY THAT RETURN THE PERSON 
#THE PERSON WHO HAS SPENT THE MOST MONEY

SELECT * FROM CUSTOMER;
SELECT * FROM invoice;
# WE HAVE TO JOIN TWO TABLE

SELECT CUSTOMER.CUSTOMER_ID,CUSTOMER.FIRST_NAME,CUSTOMER.LAST_NAME,SUM(INVOICE.TOTAL) AS TOTAL
FROM CUSTOMER 
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
GROUP BY CUSTOMER.CUSTOMER_ID,CUSTOMER.FIRST_NAME,CUSTOMER.LAST_NAME
ORDER BY TOTAL DESC
LIMIT 1;



#QUESTION 2 MODERATW
#1) WRITE A QUERY TO REETURN ALLL THE EMAIL ,FIRST NAME, LAST NAME, AND GENRE OF ALL ROCKMUSIC LISTENERS RETUEN YOUR LIST ORDERED ALPHABETICALL BY WMAIL STATRING WITH A

SELECT DISTINCT EMAIL,FIRST_NAME,LAST_NAME
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
JOIN INVOICE_LINE ON INVOICE.INVOICE_ID=INVOICE_LINE.INVOICE_ID
WHERE TRACK_ID IN(
SELECT TRACK_ID FROM TRACK
JOIN GENRE ON TRACK.GENRE_ID=GENRE.GENRE_ID
WHERE GENRE.NAME LIKE 'ROCK')
ORDER BY EMAIL;


#2) LETS INVITE THE ARTISTS WHO HAVE WRITTEN THE MOST ROCK MUSIC IN OUR DATASET. WRITE A QUET THAT RETURNS THE ARTIST NAME AND TOTAL 
#TRACK COUNT OF THE TOP 10 ROCK BANDS

SELECT * FROM ARTIST;

SELECT ARTIST.ARTIST_ID,ARTIST.NAME,COUNT(ARTIST.ARTIST_ID) AS NUMBER_OF_SONGS
FROM TRACK
JOIN ALBUM2 ON ALBUM2.ALBUM_ID=TRACK.ALBUM_ID
JOIN ARTIST ON ALBUM2.ARTIST_ID=ARTIST.ARTIST_ID
JOIN GENRE ON TRACK.GENRE_ID=GENRE.GENRE_ID
WHERE GENRE.NAME LIKE 'ROCK'
GROUP BY ARTIST.ARTIST_ID,ARTIST.NAME
ORDER BY NUMBER_OF_SONGS DESC
LIMIT 10; 


#QUESTION 3) RETURN ALL THE TRACK NAMEES THAT HAVE A SONG LENGTH LONGER THAN AN AVERAGE SONG LENGTH RETURN THE NAMAE IN MILLISECONDS FOR EACH TRACK .ORDER BY THE SONG LENGTH
# WITH THE LONGEST SONGS LISTED FIRST

SELECT NAME,MILLISECONDS
FROM TRACK 
WHERE MILLISECONDS>(
SELECT AVG(MILLISECONDS) AS AVG_TRACK_LENGTH
FROM TRACK)
ORDER BY MILLISECONDS DESC;


# SET NO 3 ADVANCE
#QUESTION 1----> FIND HOW MUCH AMMOUNT SPENT BY EACH CUSTOMER ON ARTISTS? WRITE A QUERY TO RETURN CUSTOMER NAME,ARTIST NAME AND TOTAL SPENT



# CTE IS A TEMPLATE TEMPORARY TABLE WE CREATE FOR THIS QUESTION WE WILL CREATE A TEMPLATE TABLE THAT WILL STORE THE ARTIST ID WITH MAX SALES
WITH BEST_SELLING_ARTIST AS(
SELECT ARTIST.ARTIST_ID AS ARTIST_ID, ARTIST.NAME AS ARTIST_NAME,
SUM(INVOICE_LINE.UNIT_PRICE*INVOICE_LINE.QUANTITY) AS TOTAL_SALES
FROM INVOICE_LINE
JOIN TRACK ON TRACK.TRACK_ID=INVOICE_LINE.TRACK_ID
JOIN ALBUM2 ON ALBUM2.ALBUM_ID=TRACK.ALBUM_ID
JOIN ARTIST ON ARTIST.ARTIST_ID=ALBUM2.ARTIST_ID
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 1
)

# NOW WE WANT THE CUSTOMER DETAIL
SELECT C.CUSTOMER_ID,C.FIRST_NAME,C.LAST_NAME,BSA.ARTIST_NAME,
SUM(IL.UNIT_PRICE*IL.QUANTITY) AS AMOUNT_SPENT
FROM INVOICE I 
JOIN CUSTOMER C ON C.CUSTOMER_ID=I.CUSTOMER_ID
JOIN INVOICE_LINE IL ON IL.INVOICE_ID=I.INVOICE_ID
JOIN TRACK T ON T.TRACK_ID=IL.TRACK_ID
JOIN ALBUM2 ALB ON ALB.ALBUM_ID=T.ALBUM_ID
JOIN BEST_SELLING_ARTIST BSA ON BSA.ARTIST_ID=ALB.ARTIST_ID
GROUP BY 1,2,3,4
ORDER BY 5 DESC;

#QUESETION 2)--> WE WANT TO FIND OUT THE MOST POPULAR MUSIC GENRE FOR EACH COUNTRY WE DETERMINE THE MOST POPULAR GENRE AS RHE GENRE WITH THW HIGHEST 
# AMOUNT OF PURACHASE.WRITE A QUERY THAT RETURNS EACH COUNTRY ALONG WITH THE TOP GENRE .FOR COUNTRIES WHERE THE MAXIMUM NUMBRE OF PURACASED IS SHARED
#REETURS ALL THE GENRE
WITH POPULAR_GENRE AS(
SELECT COUNT (INVOICE_LINE.QUANTITY) AS PURCHASE,CUSTOMER.COUNTRY,GENRE.NAME,GENRE.GENRE_ID,
ROW_NUMBER() OVER(PARTITION BY CUSTOMER.COUNTRY ORDER BY COUNT(INVOICE_LINE.QUANTITY)DESC) AS ROWNO
FROM INVOICE_LINE
JOIN INVOICE ON INVOICE.INVOICE_ID=INVOICE_LINE.INVOICE_ID
JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID=INVOICE.COUSTOMER_ID
JOIN TRACK ON TRACK.TRACK_ID=INVOICE_LINE.TRACK_ID
JOIN GENRE ON GENRE.GENRE_ID=TRACK.GENRE_ID
GROUP BY 2,3,4
ORDER BY 2 ASC,1 DESC
)

SELECT COUNT(INVOICE_LINE.QUANTITY) AS PURCHASE,CUSTOMER.COUNTRY,GENRE.NAME,GENRE.GENRE_ID,
ROW_NUMBER() OVER(PARTITION BY CUSTOMER.COUNTRY ORDER BY COUNT(INVOICE_LINE.QUANTITY)DESC) AS ROWNO
FROM INVOICE_LINE
JOIN INVOICE ON INVOICE.INVOICE_ID=INVOICE_LINE.INVOICE_ID
JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
JOIN TRACK ON TRACK.TRACK_ID=INVOICE_LINE.TRACK_ID
JOIN GENRE ON GENRE.GENRE_ID=TRACK.GENRE_ID
GROUP BY 2,3,4
ORDER BY 2 ASC,1 DESC;

# DO IT LATER ON

#QUESTION 3)--> WRITE A QUERY THAT DETERMINES THE CUSTOMER THAT HAS SPENT THE MOST ON MUISC FOR EACH COUNTRY ,WRITE A QUERY THAT RETURNS TEH COUNTRY 
#ALONG WITH THI TOP CUSTOMER AND HOW MUCH THEY SPENT ,FOR COUNTRIES WHERE THE TOP AMOUNT SPENT IS SHARED  PROVIDE ALL THE CUSTOMERS WHO SPENT THIS AMOUNT
WITH RECURSIVE
    CUSTOMER_WITH_COUNTRY AS(
      SELECT CUSTOMER.CUSTOMER_ID,FIRST_NAME,LAST_NAME,BILLING_COUNTRY,SUM(TOTAL) AS TOTAL_SPENDING
      FROM INVOICE 
      JOIN CUSTOMER ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
      GROUP BY 1,2,3,4
      ORDER BY 1,5 DESC
      ),
      
COUNTRY_MAX_SPENDING AS(
SELECT BILLING_COUNTRY,MAX(TOTAL_SPENDING) AS MAX_SPENDING
FROM CUSTOMER_WITH_COUNTRY
GROUP BY BILLING_COUNTRY)

SELECT CC.BILLING_COUNTRY,CC.TOTAL_SPENDING,CC.FIRST_NAME,CC.LAST_NAME,CC.CUSTOMER_ID
FROM CUSTOMER_WITH_COUNTRY CC
JOIN COUNTRY_MAX_SPENDING MS
ON CC.BILLING_COUNTRY=MS.BILLING_COUNTRY
WHERE CC.TOTAL_SPENDING=MS.MAX_SPENDING
ORDER BY 1;










